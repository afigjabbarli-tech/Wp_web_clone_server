// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebWhatsAppClone.DataBase;

#nullable disable

namespace WebWhatsAppClone.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250615190004_Migration-2")]
    partial class Migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebWhatsAppClone.DataBase.Entities.FileCategory", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("deleted_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("deleted_by")
                        .HasColumnType("uuid");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("status_changed_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("status_changed_by")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("FileCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
